<div class="container">
    <div class="row">
        <div class="col-md-12">
            Static Nav: <a href="/">Home</a> | <a href="/japan">Japan Basses</a> | <a href="/usa">USA Basses</a> | <a href="/precision">Precision Basses</a>
        </div>
        <div class="col-md-12">
            <h1>Bass Finder</h1>
            <div id="select0">
                <h2 >Brand - Select:</h2>
                <button class="nextButton">Next</button>
            </div>
            <div id="bassesMatchingDiv">
                <p>Basses matching these criteria: <span id="bassesMatching"></span></p>
            </div>
            <div id="select1" style="display: none">
                <h2>Country of Origin - Select:</h2>
                <button class="nextButton">Next</button>
            </div>
            <div id="select2" style="display: none">
                <h2>Body Style - Select:</h2>
                <button class="nextButton">Next</button>
            </div>
            <div id="select3" style="display: none">
                <h2>Hardware - Select:</h2>
                <button class="nextButton">Next</button>
            </div>
        </div>
    </div>
</div>


<script>

    // go ahead and ping the database, and update the # of available basses
    // this should likely be replaced with a seperate, simpler API call at some point
    // but this will work for now since the DB is tiny
    $.get("/api/all").then(function(response) {
        console.log("ajax request triggered");
        console.log("ajax result:");
        console.log(response);
        var tableBasses = response.basses;
        console.log(tableBasses);
        var bassesMatching = response.basses.length;
        console.log({bassesMatching});
        $("#bassesMatching").text(bassesMatching);
    });

    // we'll always start @ step zero, aka first selection options
    var currentStep = 0;

    $(".nextButton").on("click", function(event){
        console.log("nextButton click captured");
        currentStep++;
        console.log({currentStep});
        // select1
        var visibilityTarget = "#select" + currentStep;
        console.log({visibilityTarget});
        $(visibilityTarget).attr("style", "display: block");
    });

    $(".dynamic").on("click", function(event){ // capture the click on any of the devour buttons
        console.log("caught the click");
        const searchColumn = $(this).attr("column"); // grab the ID for use in the sql query
        const searchMatch = $(this).attr("match");
        console.log("searchColumn = " + searchColumn);
        console.log("searchMatch = " + searchMatch);
        // we're actually skipping this step, since all we need to do it send the ID over in the post (and we're doing that via the URL)
        // const devourData = { // create an object of fields that will be fed into our ajax PUT request
        //    devoured: true // in this case we're just sending over the 'devoured' flag in the body
        // };
        if ( searchColumn === "all" && searchMatch === "all" ) {
            console.log("request is for the ALL API");
            var requestURL = "/api/all"; // TODO: should probably kill this in production
        } else {
            console.log("request is for search/match API");
            var requestURL = "/api/" + searchColumn + "/" + searchMatch;
        }
        console.log("requestURL = " + requestURL);
        //$("#bassTable").empty();
        //$("#bassTable").html("<tr><th>Brand</th><th>Model</th><th>Type</th><th>Made In</th><th>Markets</th><th>Hardware Color</th></tr>");
        $.get(requestURL).then(function(response) {
            console.log("ajax request triggered");
            console.log("ajax result:");
            console.log(response);
            var tableBasses = response.basses;
            // console.log(tableBasses);
            var newTableGuts = "<tr><th>Brand</th><th>Model</th><th>Type</th><th>Made In</th><th>Markets</th><th>Hardware Color</th></tr>";
            tableBasses.forEach(element => {
                var brand = element.gen_brand;
                var model = element.gen_model;
                var type = element.gen_type;
                var madeIn = element.gen_country;
                var markets = element.gen_market;
                var hardwareColor = element.gen_hardware;
                var newTableRow = "<tr><td>"+brand+"</td><td>"+model+"</td><td>"+type+"</td><td>"+madeIn+"</td><td>"+markets+"</td><td>"+hardwareColor+"</td></tr>";
                newTableGuts = newTableGuts + newTableRow;
            })
            $("#bassTable").html(newTableGuts);
            // newTable = newTable + "</table>";

        });
    });

</script>





