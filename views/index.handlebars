<div class="container">
    <div class="row">
        <div class="col-md-12">
            Static Nav: <a href="/">Home</a> | <a href="/japan">Japan Basses</a> | <a href="/usa">USA Basses</a> | <a href="/precision">Precision Basses</a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <table border="1" id="bassTable">
                <tr>
                    <th>Brand</th>
                    <th>Model</th>
                    <th>Type</th>
                    <th>Made In</th>
                    <th>Markets</th>
                    <th>Hardware Color</th>
                </tr>
                {{#each basses}}
                    <tr>
                        <td>{{gen_brand}}</td>
                        <td>{{gen_model}}</td>
                        <td>{{gen_type}}</td>
                        <td>{{gen_country}}</td>
                        <td>{{gen_market}}</td>
                        <td>{{gen_hardware}}</td>
                    </tr>
                {{/each}}
            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            Dynamic Load: 
            <button class="dynamic" column="all" match="all">All Basses</button> 
            <button class="dynamic" column="gen_country" match="Japan">Japan Basses</button> 
            <button class="dynamic" column="gen_country" match="USA">USA Basses</button> 
            <button class="dynamic" column="gen_type" match="Precision">Precision Basses</button>
        </div>
    </div>
</div>
<div class="container">
    <div class="row bg-danger">
        <div class="col-md-3 text-center jules">
            <img src="assets/images/jules.png" class="rounded-circle height-auto jules">
        </div>
        <div class="col-md-6 text-center">
            <h1 class="gf text-warning">Jules Joint</h1>
            <h4 class="gf text-warning">This <b>is</b> a tasty burger!</h4>
        </div>
        <div class="col-md-3 text-center jules">
            <img src="assets/images/jules.png" class="rounded-circle height-auto jules">
        </div>
    </div>
    <div class="row bg-danger pb-4">
        <div class="col-md-1 bg-danger">
            {{!-- empty --}}
        </div>
        <div class="col-md bg-warning">
            <h2 class="gf text-center">Available Burgers</h2>
            <h6 class="gf text-center">Toasty from the heat lamps!</h6>
            <div class="vh50 mb-3">
                <table class="table bg-white table-sm mb-0">
                    {{#each burgers}}
                    {{#unless devoured}}
                        <tr><td>{{burger_name}}</td><td valign="middle"><button class="devour" id="{{id}}">Devour</button></td></tr>
                    {{/unless}}
                    {{/each}}
                </table>
            </div>
        </div>
        <div class="col-md-1 bg-danger">
            {{!-- empty --}}
        </div>
        <div class="col-md bg-warning">
            <h2 class="gf text-center">Devoured Burgers</h2>
            <h6 class="gf text-center">Don't be jealous!</h6>
            <div class="vh50 mb-3">
                <table class="table bg-white table-sm mb-0">
                    {{#each burgers}}
                    {{#if devoured}}
                        <tr><td>{{burger_name}}</td></tr>
                    {{/if}}
                    {{/each}}
                </table>
            </div>
        </div>
        <div class="col-md-1 bg-danger">
            {{!-- empty --}}
        </div>
    </div>
    <div class="row bg-danger">
        <div class="col-md-3"></div>
        <div class="col-md-6 text-center pb-5">
            <form>
                <h2 class="gf">Build-a-Burger</h2>
                <input type="text" id="newBurger" name="newBurger" class="form-control mb-2">
                <button id="newBurgerButton" class="btn btn-warning">Submit</button>
            </form>
        </div>
        <div class="col-md-3"></div>
    </div>
</div>


<script>

    $(".dynamic").on("click", function(event){ // capture the click on any of the devour buttons
        console.log("caught the click");
        const searchColumn = $(this).attr("column"); // grab the ID for use in the sql query
        const searchMatch = $(this).attr("match");
        console.log("searchColumn = " + searchColumn);
        console.log("searchMatch = " + searchMatch);
        // we're actually skipping this step, since all we need to do it send the ID over in the post (and we're doing that via the URL)
        // const devourData = { // create an object of fields that will be fed into our ajax PUT request
        //    devoured: true // in this case we're just sending over the 'devoured' flag in the body
        // };
        if ( searchColumn === "all" && searchMatch === "all" ) {
            console.log("request is for the ALL API");
            var requestURL = "/api/all"; // TODO: should probably kill this in production
        } else {
            console.log("request is for search/match API");
            var requestURL = "/api/" + searchColumn + "/" + searchMatch;
        }
        console.log("requestURL = " + requestURL);
        //$("#bassTable").empty();
        //$("#bassTable").html("<tr><th>Brand</th><th>Model</th><th>Type</th><th>Made In</th><th>Markets</th><th>Hardware Color</th></tr>");
        $.get(requestURL).then(function(response) {
            console.log("ajax request triggered");
            console.log("ajax result:");
            console.log(response);
            var tableBasses = response.basses;
            // console.log(tableBasses);
            var newTableGuts = "<tr><th>Brand</th><th>Model</th><th>Type</th><th>Made In</th><th>Markets</th><th>Hardware Color</th></tr>";
            tableBasses.forEach(element => {
                var brand = element.gen_brand;
                var model = element.gen_model;
                var type = element.gen_type;
                var madeIn = element.gen_country;
                var markets = element.gen_market;
                var hardwareColor = element.gen_hardware;
                var newTableRow = "<tr><td>"+brand+"</td><td>"+model+"</td><td>"+type+"</td><td>"+madeIn+"</td><td>"+markets+"</td><td>"+hardwareColor+"</td></tr>";
                newTableGuts = newTableGuts + newTableRow;
            })
            $("#bassTable").html(newTableGuts);
            // newTable = newTable + "</table>";

        });
    });


    $(".devour").on("click", function(event){ // capture the click on any of the devour buttons
        const updateID = $(this).attr("id"); // grab the ID for use in the sql query
        console.log("updateID = " + updateID);
        // we're actually skipping this step, since all we need to do it send the ID over in the post (and we're doing that via the URL)
        // const devourData = { // create an object of fields that will be fed into our ajax PUT request
        //    devoured: true // in this case we're just sending over the 'devoured' flag in the body
        // };
        $.ajax("/" + updateID, { // do an ajax call
            type: "PUT", // use the PUT method
            // data: devourData // would normally send this if we needed to send anything more than the ID for record. But we're handling that via the PUT URL
        }).then( () => {
            // TODO: don't we need some sort of error checking here?
            console.log("changed devoured status to true"); // this is kind of an assumption
            location.reload(); // reload the page
        });
    });

    $("#newBurgerButton").on("click", function(event){
        const newBurger = $("#newBurger").val().trim();
        console.log("newBurger = ", newBurger);
        const newBurgerData = {
            burger_name: newBurger
        };
        $.ajax("/", {
            type: "POST",
            data: newBurgerData,
        }).then( () => {
            console.log("created a new burger");
            location.reload();
        })
    });

</script>





